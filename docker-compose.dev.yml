version: "3"
services:
  # Database, sgared between keycloak and wordpress
  mysqldb:
    container_name: wysiblocks_mysqldb
    restart: unless-stopped
    image: mysql:5.7
    volumes:
      - mysqldbdata:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=user_stories_root
      - MYSQL_DATABASE=keycloak
      - MYSQL_USER=keycloak
      - MYSQL_PASSWORD=user_stories_keycloak
    networks:
      - backend

  # # A GUI for MySqlDB
  # adminer:
  #   image: adminer:4.7
  #   container_name: wysiblocks_mysqladminer
  #   restart: unless-stopped
  #   environment:
  #     - ADMINER_DEFAULT_SERVER=mysqldb
  #   ports:
  #     - 8082:8080
  #   depends_on:
  #     - mysqldb
  #   networks:
  #     - backend

  # Standalone authentication server
  keycloak:
    container_name: wysiblocks_keycloak
    restart: unless-stopped
    depends_on:
      - mysqldb
    image: jboss/keycloak:10.0.1
    volumes:
      - ./keycloak/themes/wysiblocks:/opt/jboss/keycloak/themes/wysiblocks
      - ./keycloak/configuration/standalone.xml:/opt/jboss/keycloak/standalone/configuration/standalone.xml
      - ./keycloak/configuration/standalone-ha.xml:/opt/jboss/keycloak/standalone/configuration/standalone-ha.xml
    ports:
      - 8080:8080
    environment:
      - KEYCLOAK_USER=user_stories
      - KEYCLOAK_PASSWORD=user_stories_root
      - DB_VENDOR=mysql
      - DB_ADDR=mysqldb
      - DB_DATABASE=keycloak
      - DB_USER=keycloak
      - DB_PASSWORD=user_stories_keycloak
    networks:
      - backend
      - frontend

  # Database, sgared between strapi and core API
  mongodb:
    container_name: wysiblocks_mongodb
    restart: unless-stopped
    image: mongo:4.2.6-bionic
    command: mongod --auth
    volumes:
      - mongodbdata:/data/db
      - ./mongo/mongo-init.js:/docker-entrypoint-initdb.d/mongo-init.js:ro
    # This is only required if running APIs outside of container
    # ports:
    #   - 27017:27017
    environment:
      - MONGO_INITDB_ROOT_USERNAME=user_stories
      - MONGO_INITDB_ROOT_PASSWORD=user_stories_root
      - MONGO_INITDB_DATABASE=admin
      - MONGODB_DATA_DIR=/data/db
      - MONGODB_LOG_DIR=/dev/null
    networks:
      - backend

  # A GUI for MongoDB
  mongo-express:
    container_name: wysiblocks_mongo_express
    restart: unless-stopped
    depends_on:
      - mongodb
    image: mongo-express
    ports:
      - 8081:8081
    environment:
      - ME_CONFIG_MONGODB_ENABLE_ADMIN=true
      - ME_CONFIG_BASICAUTH_USERNAME=user_stories
      - ME_CONFIG_BASICAUTH_PASSWORD=user_stories_mongo_express
      - ME_CONFIG_MONGODB_ADMINUSERNAME=user_stories
      - ME_CONFIG_MONGODB_ADMINPASSWORD=user_stories_root
      - ME_CONFIG_MONGODB_PORT=27017
      - ME_CONFIG_MONGODB_SERVER=wysiblocks_mongodb
      - ME_CONFIG_OPTIONS_EDITORTHEME=ambiance
    networks:
      - backend

  # Open source Headless CMS with customizable APIs
  strapi_cms:
    container_name: wysiblocks_strapi_cms
    restart: unless-stopped
    depends_on:
      - mongodb
    image: denisnv/wysiblocks_strapi_cms:dev
    build:
      context: ./strapi_cms/
      dockerfile: dev.Dockerfile
    volumes:
      - ./strapi_cms/admin:/app/admin/
      - ./strapi_cms/api:/app/api/
      - ./strapi_cms/components:/app/components/
      - ./strapi_cms/config:/app/config/
      - ./strapi_cms/extensions:/app/extensions/
      - ./strapi_cms/hooks:/app/hooks/
      - ./strapi_cms/middlewares:/app/middlewares/
      - ./strapi_cms/plugins:/app/plugins/
      - ./strapi_cms/.editorconfig:/app/.editorconfig
      - ./strapi_cms/.eslintignore:/app/.eslintignore
      - ./strapi_cms/.eslintrc:/app/.eslintrc
      - ./strapi_cms/favicon.ico:/app/favicon.ico
      - strapi_public:/app/public/
    ports:
      - "1337:1337"
    environment:
      - DATABASE_HOST=mongodb
      - DATABASE_PORT=27017
      - DATABASE_NAME=strapi_cms
      - DATABASE_USERNAME=strapi
      - DATABASE_PASSWORD=user_stories_strapi
      - AUTHENTICATION_DATABASE=strapi_cms
      - NODE_ENV=development
      - CHOKIDAR_USEPOLLING="true"
    networks:
      - backend
      - frontend

  # React Wysibloacks front site
  front_client:
    stdin_open: true
    container_name: wysiblocks_front_client
    restart: unless-stopped
    depends_on:
      - mongodb
      - strapi_cms
      - keycloak
    image: denisnv/wysiblocks_front_client:dev
    build:
      context: ./front_client/
      dockerfile: dev.Dockerfile
    volumes:
      - ./front_client/.env:/app/.env
      - ./front_client/public:/app/public/
      - ./front_client/src:/app/src/
    ports:
      - "3000:3000"
    environment:
      - REACT_APP_KEYCLOAK_BASE_URL=http://localhost:8080
      - REACT_APP_KEYCLOAK_REALM=wysiblocks
      - REACT_APP_KEYCLOAK_CLIENT_ID=front_client
      - REACT_APP_GRAPHQL=http://localhost:1337/graphql
      - REACT_APP_SITE_ROLE=development
      - REACT_APP_GOOGLE_MAPS_API_KEY=AIzaSyAVRPSPAjvq-eLUhaMZiOUanqVirxCkrmk
    networks:
      - frontend

networks:
  frontend:
    driver: bridge
  backend:
    driver: bridge

volumes:
  mongodbdata:
    driver: local
  mysqldbdata:
    driver: local
  strapi_public:
    driver: local
